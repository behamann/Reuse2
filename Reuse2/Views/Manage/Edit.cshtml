@model Reuse2.Models.ApplicationUser

@{
    ViewBag.Title = "Editar";
    var type = Request.Params["type"];
    if (Model != null)
    {
        type = Model.role;
    }
}

<!-- Page heading two starts -->

<div class="page-heading-two">
    <div class="container">
        <h2>Editar </h2>
        <div class="clearfix"></div>
    </div>
</div>

<div class="ecommerce">

    <div class="row">            
        <div class="col-md-9 col-sm-8 col-md-push-3 col-sm-push-4">
            <h4><i class="fa fa-user color"></i>&nbsp; Minha conta</h4>
            <hr />

            @using (Html.BeginForm("Edit", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.role)

                    <div class="form-group">
                        <label for="UserName" class="control-label col-md-2 required">Nome</label>
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.endereco, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.endereco, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.endereco, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.cep, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.cep, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cep, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.bairro, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.bairro, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.bairro, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.estado, new { @class = "col-md-2 control-label required" })
                        <div class="col-md-5">
                            <select class="form-control" data-val="true" data-val-required="Este campo é obrigatório" id="estado" name="estado">
                                <option value=""></option>
                            </select>
                            @Html.ValidationMessageFor(m => m.estado, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.cidade, new { @class = "col-md-2 control-label required" })
                        <div class="col-md-5">
                            <select class="form-control single-line valid" data-val="true" data-val-required="Este campo é obrigatório" id="cidade" name="cidade"></select>
                            @*Html.TextBoxFor(m => m.cidade, new { @class = "form-control" })*@
                            @Html.ValidationMessageFor(m => m.cidade, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.telefone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.telefone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.telefone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="PhoneNumber" class="control-label col-md-2 required">Celular</label>
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @if (type != "User")
                    {
                    <div class="form-group">
                        @Html.LabelFor(model => model.tipoDeInstituicao, "Tipo da instituição", htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-5">
                            @Html.DropDownList("tipoDeInstituicaoID", null, "Selecione uma opção", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.tipoDeInstituicao, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.cnpj, new { @class = "col-md-2 control-label required" })
                        <div class="col-md-5">
                            @Html.TextBoxFor(m => m.cnpj, new { @class = "form-control", placeholder = "Apenas números" })
                            @Html.ValidationMessageFor(m => m.cnpj, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.nomeDoResponsavel, new { @class = "col-md-2 control-label required" })
                        <div class="col-md-5">
                            @Html.TextBoxFor(m => m.nomeDoResponsavel, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.nomeDoResponsavel, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.descricaoDaCausa, new { @class = "col-md-2 control-label required" })
                        <div class="col-md-5">
                            @Html.TextAreaFor(m => m.descricaoDaCausa, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.descricaoDaCausa, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.itensNecessitados, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.TextAreaFor(m => m.itensNecessitados, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.itensNecessitados, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.metodoDeColeta, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.TextAreaFor(m => m.metodoDeColeta, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.metodoDeColeta, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.areaDeCobertura, new { @class = "col-md-2 control-label required" })
                        <div class="col-md-5">
                            @Html.TextAreaFor(m => m.areaDeCobertura, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.areaDeCobertura, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.restricoesDeColeta, new { @class = "col-md-2 control-label" })
                        <div class="col-md-5">
                            @Html.TextAreaFor(m => m.restricoesDeColeta, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.restricoesDeColeta, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    }
                    <div class="form-group">
                        <div>
                            <label for="file" class="control-label col-md-2">Avatar</label>
                            <div class="col-md-5">
                                <img src="../../Content/img/User/@Model.avatar" style="max-width: 100px;" class="img-responsive img-thumbnail" alt="" />
                                <input type="file" name="file" id="file" />
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-5">
                            <input type="submit" value="Salvar" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Voltar ao perfil", "Index")
            </div>
        </div>
        <div class="col-md-3 col-sm-4 col-md-pull-9 col-sm-pull-8">

            <!-- Shopping Sidebar -->
            <div class="sidebar">

                <!-- Heading -->
                <h2>Navegação</h2>
                <!-- Sidebar Menu -->
                <ul class="account-nav">
                    <li>@Html.ActionLink("Minha conta", "Index")</li>
                    <li>@Html.ActionLink("Editar conta", "Edit", new RouteValueDictionary { { "name", Model.UserName } })</li>
                    <li>@Html.ActionLink("Histórico de trocas", "History")</li>
                    <li>@Html.ActionLink("Meus anúncios", "MyListings")</li>
                    <li>@Html.ActionLink("Troque sua senha", "ChangePassword")</li>
                    <li>@Html.ActionLink("Excluir sua conta", "Delete")</li>
                </ul>

            </div>

        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="../../Content/js/jquery.js"></script>
<script>
    $(function () {
        $.getJSON('../../estados_cidades.json', function (data) {
            var items = [];
            var options = '<option value="">Selecione um estado</option>';
            $.each(data, function (key, val) {
                options += '<option value="' + val.sigla + '">' + val.nome + '</option>';
            });
            $("#estado").html(options);

            $("#estado").change(function () {

                var options_cidades = '';
                var str = "";

                $("#estado option:selected").each(function () {
                    str += $(this).text();
                });

                $.each(data, function (key, val) {
                    if (val.nome == str) {
                        $.each(val.cidades, function (key_city, val_city) {
                            options_cidades += '<option value="' + val_city + '">' + val_city + '</option>';
                        });
                    }
                });
                $("#cidade").html(options_cidades);

            }).change();

        });
        setTimeout(function () {
            $("#estado").val("@Model.estado");
            $("#estado").change();
            $("#cidade").val("@Model.cidade");
            $("#tipoDeInstituicaoID").val("@Model.tipoDeInstituicaoID");
        }, 200);
    });
</script>