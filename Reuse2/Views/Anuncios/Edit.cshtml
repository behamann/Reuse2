@model Reuse2.Models.Anuncio

@{
    ViewBag.Title = "Editar anúncio";
}


@using (Html.BeginForm("Edit", "Anuncios", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@ViewBag.Title</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.anuncioID)
        @Html.HiddenFor(model => model.dataCriacao)
        @Html.HiddenFor(model => model.pessoaID)
        @Html.HiddenFor(model => model.status)
        @Html.HiddenFor(model => model.ativo)

        <div class="form-group">
            @Html.LabelFor(model => model.tipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="tipo" name="tipo" class="form-control">
                    <option value="Ofertas">Oferta</option>
                    <option value="Pedidos">Pedido</option>
                </select>
                @Html.ValidationMessageFor(model => model.tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.titulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.titulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.condicao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                <select id="condicao" name="condicao" class="form-control">
                    <option>Selecione uma opção</option>
                    <option value="Danificado">Danificado</option>
                    <option value="Imcompleto">Imcompleto (faltam partes)</option>
                    <option value="Não funcional">Não funcional</option>
                    <option value="Novo">Novo</option>
                    <option value="Precisa de reparos">Precisa de reparos</option>
                    <option value="Remanufaturado">Remanufaturado</option>
                    <option value="Usado">Usado</option>
                </select>
                @Html.ValidationMessageFor(model => model.condicao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.categoriaID, "categoriaID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("categoriaID", null, "Selecione uma opção", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.categoriaID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.subCategoria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="subCategoria" name="subCategoria" class="form-control"><option>Selecione uma categoria</option></select>
                @Html.ValidationMessageFor(model => model.subCategoria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.descricao, new { @class = "form-control", rows = 7 })
                @Html.ValidationMessageFor(model => model.descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.video, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.video, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.video, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>
                <label for="file" class="control-label col-md-2">Imagens</label>
                <div class="col-md-10">
                    <ul class="attachment" style="list-style-type: none;">
                        @foreach (var item in Model.imagens)
                        {
                            <li class="col-md-5">
                                <img src="../../Content/img/Anuncios/@item.Id@item.Extension" style="height: 150px;width: 200px;" class="img-responsive img-thumbnail" alt="" />
                                <a href="javascript:void(0);" data-id="@item.Id" class="deleteItem">Excluir</a>
                            </li>
                        }
                    </ul>
                    <div class="clearfix"></div>
                    <input type="file" name="file" id="file" multiple="multiple" />
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar ao perfil", "Index", "Manage")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="../../Content/js/jquery.js"></script>
<script type="text/javascript">
    $(function() {
        $('#categoriaID').change(getSubcategorias);
        $('#categoriaID').change();
        console.log("@Model.condicao");
        setTimeout(function () {
            $("#subCategoria").val("@Model.subCategoria");
            $("#condicao").val("@Model.condicao");
        }, 200);


        $('.deleteItem').click(function (e) {
            e.preventDefault();
            var $ctrl = $(this);
            if (confirm('Deseja excluir essa imagem?')) {
                $.ajax({
                    url: '@Url.Action("DeleteFile")',
                    type: 'POST',
                    data: { id: $(this).data('id') }
                }).done(function (data) {
                    if (data.Result == "OK") {
                        $ctrl.closest('li').remove();
                    }
                    else if (data.Result.Message) {
                        alert(data.Result.Message);
                    }
                }).fail(function () {
                    alert("There is something wrong. Please try again.");
                })

            }
        });

    });

    function getSubcategorias() {
        if ($('#categoriaID').val() == '') {
            $('#subCategoria').html('<option>Selecione uma categoria</option>');
        } else {
            $.ajax({
                  type: "POST",
                  url: "../../Subcategorias/getSubcategoriasByCategoria?catId=" + $('#categoriaID').val(),
                  data: "{}",
                  contentType: "application/json; charset=utf-8",
                  dataType: "json",
                  success: function(response) {
                      $('#subCategoria').html('');
                      $.each(response.list, function (i, item) {
                          $('#subCategoria').append($('<option>', {
                              value: item.subCategoriaID,
                              text: item.titulo
                          }));
                      });
                  },
                  failure: function(msg) {
                      console.log('erro');
                  }
            });
        }
    }
</script>
